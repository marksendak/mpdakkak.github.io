library(data.table)
crosswalk <- fread("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/F2213L2P.TXT")
crosswalk <- fread("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/F2213L2P.txt")
crosswalk <- fread("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/F2213L2P.txt", header = FALSE)
crosswalk <- read.table("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/F2213L2P.txt", header = FALSE)
View(crosswalk)
?fread
crosswalk <- read.table("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/F2213L2P.txt")
crosswalk <- fread("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/F2213L2P.txt")
crosswalk <- read.table("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/F2213L2P.txt")
View(crosswalk)
?read.table
crosswalk <- as.data.table(read.table("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/F2213L2P.txt"))
View(crosswalk)
setnames(crosswalk, names(crosswalk), c("ICD9_Code", "Condition_Category"))
View(crosswalk)
data <- fread("/Users/sommpd10/Box Sync/SENSITIVE Folder mpd10/CKD Box Folder/DEDUCE extracts/ICD9 Codes/ICD9s_03_2015.csv")
head(data)
data[, c("Date", "Time", "AM_PM") := tstrsplit(Date, " ", fixed = TRUE)][, c("Time", "AM_PM") := NULL][, Date := as.Date(fast_strptime(Date, format = "%m/%d/%Y"))]
setnames(data, names(data), gsub(" ", "_", names(data)))
data[, c("Date", "Time", "AM_PM") := tstrsplit(Date, " ", fixed = TRUE)][, c("Time", "AM_PM") := NULL][, Date := as.Date(fast_strptime(Date, format = "%m/%d/%Y"))]
names(data)
data[, c("Diagnosis_Date", "Time", "AM_PM") := tstrsplit(Date, " ", fixed = TRUE)][, c("Time", "AM_PM") := NULL][, Date := as.Date(fast_strptime(Date, format = "%m/%d/%Y"))]
data[, c("Diagnosis_Date", "Time", "AM_PM") := tstrsplit(Diagnosis_Date, " ", fixed = TRUE)][, c("Time", "AM_PM") := NULL][, Diagnosis_Date := as.Date(fast_strptime(Diagnosis_Date, format = "%m/%d/%Y"))]
library(stringr)
data[, c("Diagnosis_Date", "Time", "AM_PM") := tstrsplit(Diagnosis_Date, " ", fixed = TRUE)][, c("Time", "AM_PM") := NULL][, Diagnosis_Date := as.Date(fast_strptime(Diagnosis_Date, format = "%m/%d/%Y"))]
library(lubridate)
data[, c("Diagnosis_Date", "Time", "AM_PM") := tstrsplit(Diagnosis_Date, " ", fixed = TRUE)][, c("Time", "AM_PM") := NULL][, Diagnosis_Date := as.Date(fast_strptime(Diagnosis_Date, format = "%m/%d/%Y"))]
head(data)
data[, ICD_Diagnosis_Code := gsub("\\.", "", ICD_Diagnosis_Code)]
View(crosswalk)
setnames(crosswalk, names(crosswalk), c("ICD_Diagnosis_Code", "Condition_Category"))
####### Marge ICD 9 Codes and Condition Categories
data <- merge(data, crosswalk, by = "ICD_Diagnosis_Code")
library(data.table)
library(lubridate)
data <- fread("/Users/sommpd10/Box Sync/SENSITIVE Folder mpd10/CKD Box Folder/DEDUCE extracts/ICD9 Codes/ICD9s_03_2015.csv")
setnames(data, names(data), gsub(" ", "_", names(data)))
data[, c("Diagnosis_Date", "Time", "AM_PM") := tstrsplit(Diagnosis_Date, " ", fixed = TRUE)][, c("Time", "AM_PM") := NULL][, Diagnosis_Date := as.Date(fast_strptime(Diagnosis_Date, format = "%m/%d/%Y"))]
crosswalk <- as.data.table(read.table("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/F2213L2P.txt"))
setnames(crosswalk, names(crosswalk), c("ICD_Diagnosis_Code", "Condition_Category"))
test <- merge(data, crosswalk, by = "ICD_Diagnosis_Code")
View(test)
freq <- test[, .(Freq = .N), by = Condition_Category]
View(freq)
View(crosswalk)
freq_cc <- crosswalk[, .(Freq = .N), by = Condition_Category]
View(freq_cc)
View(test)
library(data.table)
library(lubridate)
library(stringr)
test <- fread("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT")
?readLines
test <- readLines("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT")
test
?fread
test <- fread("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT", skip = 8, sep = "=", nrows = 79)
test <- fread("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT", skip = 8L, sep = "=", nrows = 79)
test <- fread("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT", skip = 8L, sep = "\\=", nrows = 79)
?readLines
test <- readLines("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT", skip = 8L, nrows = 79)
test <- readLines("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT")
test
test <- test[9:87]
test
?tstrsplit
strsplit
?strsplit
test2 <- strsplit(test, split = "=")
test2 <- tstrsplit(test, split = "=")
test <- as.data.table(test[9:87])
View(test)
test2 <- tstrsplit(test, split = "=")
View(test)
test <- as.data.table(test[9:87])
test[, c("V1","HCC_Label") := tstrsplit(V1, "=", fixed = TRUE)]
View(test)
test <- readLines("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT")
test <- as.data.table(test[9:87])
test[, c("V1","HCC_Label") := tstrsplit(V1, "=", fixed = TRUE)]
View(test)
test <- readLines("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT")
test <- as.data.table(test[9:87])
test[, c("HCC","HCC_Label") := tstrsplit(V1, "=", fixed = TRUE)]
rm(test2)
View(test)
test <- readLines("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT")
test <- as.data.table(test[9:87])
?as.data.table
setnames(test, "V1", "HCC")
test[, c("HCC","HCC_Label") := tstrsplit(V1, "=", fixed = TRUE)]
test <- readLines("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT")
test <- as.data.table(test[9:87])
setnames(test, "V1", "HCC")
test[, c("HCC","HCC_Label") := tstrsplit(V1, "=", fixed = TRUE)]
test[, c("HCC","HCC_Label") := tstrsplit(HCC, "=", fixed = TRUE)]
View(test)
test <- readLines("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT")
test <- as.data.table(test[9:87])
test
labels <- readLines("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT")
library(data.table)
library(lubridate)
library(stringr)
labels <- as.data.table(test[9:87])
labels <- as.data.table(labels[9:87])
## Set name
setnames(labels, "V1", "HCC")
####### Separate text into two variables
labels[, c("HCC","HCC_Label") := tstrsplit(HCC, "=", fixed = TRUE)]
View(labels)
####### Clean variables
## Remove white space
Trim <- function(x){str_trim(x, side = "both")}
labels <- labels[, lapply(.SD, Trim)]
View(labels)
## Remove quotations
Remove_Quotes <- function(x){gsub("\\"", "", x)}
Remove_Quotes <- function(x){gsub(""", "", x)}
Remove_Quotes <- function(x){gsub('"', "", x)}
labels <- labels[, lapply(.SD, Remove_Quotes)]
View(labels)
library(data.table)
library(lubridate)
library(stringr)
data <- fread("/Users/sommpd10/Box Sync/SENSITIVE Folder mpd10/CKD Box Folder/DEDUCE extracts/ICD9 Codes/ICD9s_03_2015.csv")
setnames(data, names(data), gsub(" ", "_", names(data)))
data[, c("Diagnosis_Date", "Time", "AM_PM") := tstrsplit(Diagnosis_Date, " ", fixed = TRUE)][, c("Time", "AM_PM") := NULL][, Diagnosis_Date := as.Date(fast_strptime(Diagnosis_Date, format = "%m/%d/%Y"))]
crosswalk <- as.data.table(read.table("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/F2213L2P.txt"))
setnames(crosswalk, names(crosswalk), c("ICD_Diagnosis_Code", "Condition_Category"))
test <- merge(data, crosswalk, by = "ICD_Diagnosis_Code")
View(test)
library(data.table)
library(lubridate)
library(stringr)
labels <- readLines("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT")
## Subset lines
labels <- as.data.table(labels[9:87])
## Set name
setnames(labels, "V1", "HCC")
####### Separate text into two variables
labels[, c("HCC","HCC_Label") := tstrsplit(HCC, "=", fixed = TRUE)]
####### Clean variables
## Remove white space
Trim <- function(x){str_trim(x, side = "both")}
labels <- labels[, lapply(.SD, Trim)]
## Remove quotations
Remove_Quotes <- function(x){gsub('"', "", x)}
labels <- labels[, lapply(.SD, Remove_Quotes)]
View(labels)
labels <- readLines("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT")
## Subset lines
labels <- as.data.table(labels[9:87])
## Set name
setnames(labels, "V1", "HCC")
####### Separate text into two variables
labels[, c("HCC","HCC_Label") := tstrsplit(HCC, "=", fixed = TRUE)]
####### Clean variables
## Remove white space
Trim <- function(x){str_trim(x, side = "both")}
labels <- labels[, lapply(.SD, Trim)]
View(labels)
## Remove quotations from label
labels[, HCC_Label := gsub('"', "", HCC_Label)]
View(labels)
labels[, HCC := gsub("[0-9]+, "", HCC_Label)]
labels[, HCC := gsub("[0-9]+", "", HCC_Label)]
labels[, HCC := gsub("[0-9]+", "", HCC_Label)]
View(labels)
labels <- readLines("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT")
## Subset lines
labels <- as.data.table(labels[9:87])
## Set name
setnames(labels, "V1", "HCC")
####### Separate text into two variables
labels[, c("HCC","HCC_Label") := tstrsplit(HCC, "=", fixed = TRUE)]
####### Clean variables
## Remove white space
Trim <- function(x){str_trim(x, side = "both")}
labels <- labels[, lapply(.SD, Trim)]
## Remove quotations from label
labels[, HCC_Label := gsub('"', "", HCC_Label)]
View(labels)
## Remove digits from HCC variable
labels[, HCC := gsub("[0-9]+", "", HCC)]
View(labels)
labels <- readLines("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT")
## Subset lines
labels <- as.data.table(labels[9:87])
## Set name
setnames(labels, "V1", "HCC")
####### Separate text into two variables
labels[, c("HCC","HCC_Label") := tstrsplit(HCC, "=", fixed = TRUE)]
####### Clean variables
## Remove white space
Trim <- function(x){str_trim(x, side = "both")}
labels <- labels[, lapply(.SD, Trim)]
## Remove quotations from label
labels[, HCC_Label := gsub('"', "", HCC_Label)]
## Remove digits from HCC variable
labels[, HCC := gsub("HCC", "", HCC)]
View(labels)
library(data.table)
library(lubridate)
library(stringr)
################################### labels
labels <- readLines("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT")
## Subset lines
labels <- as.data.table(labels[9:87])
## Set name
setnames(labels, "V1", "HCC")
####### Separate text into two variables
labels[, c("HCC","HCC_Label") := tstrsplit(HCC, "=", fixed = TRUE)]
####### Clean variables
## Remove white space
Trim <- function(x){str_trim(x, side = "both")}
labels <- labels[, lapply(.SD, Trim)]
## Remove quotations from label
labels[, HCC_Label := gsub('"', "", HCC_Label)]
## Remove letters from HCC variable
labels[, HCC := gsub("HCC", "", HCC)]
View(labels)
crosswalk <- as.data.table(read.table("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/F2213L2P.txt"))
setnames(crosswalk, names(crosswalk), c("ICD_Diagnosis_Code", "Condition_Category"))
####### Merge labels
crosswalk <- merge(crosswalk, labels, by.x = "Condition_Category", by.y = "HCC")
crosswalk <- as.data.table(read.table("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/F2213L2P.txt"))
crosswalk <- as.data.table(read.table("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/F2213L2P.txt"))
setnames(crosswalk, names(crosswalk), c("ICD_Diagnosis_Code", "HCC"))
####### Merge labels
crosswalk <- merge(crosswalk, labels, by = "HCC")
View(crosswalk)
class(labels$HCC)
class(crosswalk$HCC)
library(data.table)
library(lubridate)
library(stringr)
################################### labels
labels <- readLines("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT")
## Subset lines
labels <- as.data.table(labels[9:87])
## Set name
setnames(labels, "V1", "HCC")
####### Separate text into two variables
labels[, c("HCC","HCC_Label") := tstrsplit(HCC, "=", fixed = TRUE)]
####### Clean variables
## Remove white space
Trim <- function(x){str_trim(x, side = "both")}
labels <- labels[, lapply(.SD, Trim)]
## Remove quotations from label
labels[, HCC_Label := gsub('"', "", HCC_Label)]
labels[, HCC := as.integer(gsub("HCC", "", HCC))]
View(labels)
################################### crosswalk
crosswalk <- as.data.table(read.table("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/F2213L2P.txt"))
setnames(crosswalk, names(crosswalk), c("ICD_Diagnosis_Code", "HCC"))
####### Merge labels
crosswalk <- merge(crosswalk, labels, by = "HCC")
View(crosswalk)
library(data.table)
library(lubridate)
library(stringr)
################################### labels
labels <- readLines("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/V22H79L1.TXT")
## Subset lines
labels <- as.data.table(labels[9:87])
## Set name
setnames(labels, "V1", "HCC")
####### Separate text into two variables
labels[, c("HCC","HCC_Label") := tstrsplit(HCC, "=", fixed = TRUE)]
####### Clean variables
## Remove white space
Trim <- function(x){str_trim(x, side = "both")}
labels <- labels[, lapply(.SD, Trim)]
## Remove quotations from label
labels[, HCC_Label := gsub('"', "", HCC_Label)]
## Remove letters from HCC variable
labels[, HCC := as.integer(gsub("HCC", "", HCC))]
################################### crosswalk
crosswalk <- as.data.table(read.table("/Users/sommpd10/Desktop/DukeMed/Research/CCNC/CMS HCC Folders/2014-InitialModel/CMS-HCC software V2213.79.L2/F2213L2P.txt"))
setnames(crosswalk, names(crosswalk), c("ICD_Diagnosis_Code", "HCC"))
####### Merge labels
crosswalk <- merge(crosswalk, labels, by = "HCC")
View(crosswalk)
################################### merge data with crosswalk
data <- fread("/Users/sommpd10/Box Sync/SENSITIVE Folder mpd10/CKD Box Folder/DEDUCE extracts/ICD9 Codes/ICD9s_03_2015.csv")
setnames(data, names(data), gsub(" ", "_", names(data)))
data[, c("Diagnosis_Date", "Time", "AM_PM") := tstrsplit(Diagnosis_Date, " ", fixed = TRUE)][, c("Time", "AM_PM") := NULL][, Diagnosis_Date := as.Date(fast_strptime(Diagnosis_Date, format = "%m/%d/%Y"))]
View(crosswalk)
test <- merge(data, crosswalk, by = "ICD_Diagnosis_Code")
data <- fread("/Users/sommpd10/Box Sync/SENSITIVE Folder mpd10/CKD Box Folder/DEDUCE extracts/ICD9 Codes/ICD9s_03_2015.csv")
head(data)
data[, c("Diagnosis_Date", "Time", "AM_PM") := tstrsplit(Diagnosis_Date, " ", fixed = TRUE)][, c("Time", "AM_PM") := NULL][, Diagnosis_Date := as.Date(fast_strptime(Diagnosis_Date, format = "%m/%d/%Y"))]
setnames(data, names(data), gsub(" ", "_", names(data)))
data[, c("Diagnosis_Date", "Time", "AM_PM") := tstrsplit(Diagnosis_Date, " ", fixed = TRUE)][, c("Time", "AM_PM") := NULL][, Diagnosis_Date := as.Date(fast_strptime(Diagnosis_Date, format = "%m/%d/%Y"))]
data[, ICD_Diagnosis_Code := gsub("\\.", "", ICD_Diagnosis_Code)]
head(data)
test <- merge(data, crosswalk, by = "ICD_Diagnosis_Code")
freq <- test[, .(Freq = .N), by = HCC]
View(freq)
View(test)
cc_bypt <- test[, .(Freq = .N), by = c("Patient_Identifier", "HCC")]
View(cc_bypt)
View(test)
cc_bypt <- test[, .(Freq = .N), by = c("Patient_Identifier", "HCC")][Freq >= 2]
View(cc_bypt)
cc_bypt <- test[, .(Freq = .N), by = c("Patient_Identifier", "HCC")][Freq >= 2][, .(Patient_Identifier, HCC)]
View(cc_bypt)
dummies <- unique(cc_bypt$HCC)
dummies
cc_bypt[,(dummies):=lapply(dummies,function(x)as.numeric(HCC==x))]
class(cc_bypt$HCC)
cc_bypt[, HCC := as.character(HCC)]
class(cc_bypt$HCC)
dummies <- unique(cc_bypt$HCC)
dummies
dummies <- paste("HCC", unique(cc_bypt$HCC), sep = "")
dummies
dummies <- unique(cc_bypt$HCC)
dummies
cc_bypt[,(dummies):=lapply(dummies,function(x) as.numeric(HCC==x))]
View(cc_bypt)
dummies
cc_bypt$HCC
unique(cc_bypt$HCC)[order(cc_bypt$HCC)]
?order
cc_bypt <- test[, .(Freq = .N), by = c("Patient_Identifier", "HCC")][Freq >= 2][, .(Patient_Identifier, HCC)]
dummies <- unique(cc_bypt$HCC)
dummies
class(dummies)
dummies <- unique(cc_bypt$HCC)
order(dummies)
dummies
dummies[order(dummies)]
unique(cc_bypt$HCC)[order(unique(cc_bypt$HCC))]
cc_bypt <- test[, .(Freq = .N), by = c("Patient_Identifier", "HCC")][Freq >= 2][, .(Patient_Identifier, HCC)]
View(cc_bypt)
cc_bypt[, HCC := as.character(HCC)]
dummies <- unique(cc_bypt$HCC)[order(unique(cc_bypt$HCC))]
dummies
cc_bypt <- test[, .(Freq = .N), by = c("Patient_Identifier", "HCC")][Freq >= 2][, .(Patient_Identifier, HCC)]
dummies <- as.character(unique(cc_bypt$HCC)[order(unique(cc_bypt$HCC))])
dummies
cc_bypt[, HCC := as.character(HCC)]
cc_bypt[,(dummies):=lapply(dummies,function(x) as.numeric(HCC==x))]
View(cc_bypt)
cc_bypt[, HCC := NULL]
View(cc_bypt)
View(cc_bypt)
test <- cc_bypt[, lapply(.SD, sum), by = Patient_Identifier]
View(test)
cc_bypt <- test[, .(Freq = .N), by = c("Patient_Identifier", "HCC")][Freq >= 2][, .(Patient_Identifier, HCC)]
test <- merge(data, crosswalk, by = "ICD_Diagnosis_Code")
cc_bypt <- test[, .(Freq = .N), by = c("Patient_Identifier", "HCC")][Freq >= 2][, .(Patient_Identifier, HCC)]
test <- merge(data, crosswalk, by = "ICD_Diagnosis_Code")
cc_bypt <- test[, .(Freq = .N), by = c("Patient_Identifier", "HCC")][Freq >= 2][, .(Patient_Identifier, HCC)]
dummies <- as.character(unique(cc_bypt$HCC)[order(unique(cc_bypt$HCC))])
dummies
(paste("HCC", dummies, sep = "")
(paste("HCC", dummies, sep = ""))
(paste("HCC", dummies, sep = ""))
}
(paste("HCC", dummies, sep = ""))
dummies <- as.character(unique(cc_bypt$HCC)[order(unique(cc_bypt$HCC))])
cc_bypt[, HCC := as.character(HCC)]
cc_bypt[,(paste("HCC", dummies, sep = "")):=lapply(dummies,function(x) as.numeric(HCC==x))]
View(cc_bypt)
test <- merge(data, crosswalk, by = "ICD_Diagnosis_Code")
cc_bypt <- test[, .(Freq = .N), by = c("Patient_Identifier", "HCC")][Freq >= 2][, .(Patient_Identifier, HCC)][order(Patient_Identifier)]
View(cc_bypt)
dummies <- as.character(unique(cc_bypt$HCC)[order(unique(cc_bypt$HCC))])
dummies
cc_bypt <- test[, .(Freq = .N), by = c("Patient_Identifier", "HCC")][Freq >= 2][, .(Patient_Identifier, HCC)]
dummies <- as.character(unique(cc_bypt$HCC)[order(unique(cc_bypt$HCC))])
cc_bypt[, HCC := as.character(HCC)]
cc_bypt[,(paste("HCC", dummies, sep = "")):=lapply(paste("HCC", dummies, sep = ""),function(x) as.numeric(HCC==x))]
View(cc_bypt)
cc_bypt <- test[, .(Freq = .N), by = c("Patient_Identifier", "HCC")][Freq >= 2][, .(Patient_Identifier, HCC)]
dummies <- as.character(unique(cc_bypt$HCC)[order(unique(cc_bypt$HCC))])
cc_bypt[, HCC := as.character(HCC)]
cc_bypt[,(paste("HCC", dummies, sep = "")):=lapply(dummies,function(x) as.numeric(HCC==x))]
View(cc_bypt)
cc_bypt <- test[, .(Freq = .N), by = c("Patient_Identifier", "HCC")][Freq >= 2][, .(Patient_Identifier, HCC)]
dummies <- as.character(unique(cc_bypt$HCC)[order(unique(cc_bypt$HCC))])
cc_bypt[, HCC := as.character(HCC)]
cc_bypt[,(paste("HCC", dummies, sep = "")):=lapply(dummies,function(x) as.numeric(HCC==x))]
cc_bypt[, HCC := NULL]
test2 <- cc_bypt[, lapply(.SD, max), by = Patient_Identifier]
View(test2)
test <- merge(data, crosswalk, by = "ICD_Diagnosis_Code")
rm(cc_bypt)
cc_by_patient <- data[, .(Freq = .N), by = c("Patient_Identifier", "HCC")]
cc_by_patient <- test[, .(Freq = .N), by = c("Patient_Identifier", "HCC")]
## Only keep categories where patients have more than one diagnosis code
cc_by_patient <- cc_by_patient[Freq >= 2]
## Only keep the columns for patient and HCC
cc_by_patient <- cc_by_patient[, .(Patient_Identifier, HCC)]
####### Build out dummy variables for each category
dummies <- as.character(unique(cc_bypt$HCC)[order(unique(cc_bypt$HCC))])
dummies <- as.character(unique(cc_by_patient$HCC)[order(unique(cc_by_patient$HCC))])
dummies <- as.character(unique(cc_by_patient$HCC)[order(unique(cc_by_patient$HCC))])
cc_by_patient[, HCC := as.character(HCC)]
cc_by_patient[,(paste("HCC", dummies, sep = "")):=lapply(dummies,function(x) as.numeric(HCC==x))]
## Drop HCC variable
cc_by_patient[, HCC := NULL]
####### Collapse date to 1 row per patient
cc_by_patient <- cc_by_patient[, lapply(.SD, max), by = Patient_Identifier]
View(cc_by_patient)
View(labels)
cc_by_patient <- test[, .(Freq = .N), by = c("Patient_Identifier", "HCC")]
## Only keep categories where patients have more than one diagnosis code
cc_by_patient <- cc_by_patient[Freq >= 2]
## Only keep the columns for patient and HCC
cc_by_patient <- cc_by_patient[, .(Patient_Identifier, HCC)]
as.character(labels$HCC)
dummies <- as.character(labels$HCC)
dummies
cc_by_patient[, HCC := as.character(HCC)]
cc_by_patient[,(paste("HCC", dummies, sep = "")):=lapply(dummies,function(x) as.numeric(HCC==x))]
View(cc_by_patient)
## Drop HCC variable
cc_by_patient[, HCC := NULL]
####### Collapse date to 1 row per patient
cc_by_patient <- cc_by_patient[, lapply(.SD, max), by = Patient_Identifier]
View(cc_by_patient)
View(labels)
cc_by_patient <- test[, .(Freq = .N), by = c("Patient_Identifier", "HCC")]
cc_by_patient <- cc_by_patient[Freq >= 2]
## Only keep the columns for patient and HCC
cc_by_patient <- cc_by_patient[, .(Patient_Identifier, HCC)]
####### Build out dummy variables for each category
dummies <- as.character(labels$HCC)
cc_by_patient[,(paste("HCC", dummies, sep = "")):=lapply(dummies,function(x) as.numeric(HCC==as.character(x)))]
View(cc_by_patient)
## Drop HCC variable
cc_by_patient[, HCC := NULL]
####### Collapse date to 1 row per patient
cc_by_patient <- cc_by_patient[, lapply(.SD, max), by = Patient_Identifier]
View(cc_by_patient)
